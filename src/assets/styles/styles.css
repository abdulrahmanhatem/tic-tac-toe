@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');
@font-face {
  font-family: "sorreda";
  src: url(../fonts/SorredaPro.ttf) format("truetype");
}
@font-face {
  font-family: "nutellaBold";
  src: url(../fonts/nutellaBold.ttf) format("truetype");
}
:root{
  --primary-font: "nutellaBold", serif;
  --secondary-font: "sorreda", serif;
  --primary-color: #dcb288;
  --grey: #444;
  --black: #000000;
}
body {
  display: flex;
  background: var(--black);
  padding: 0;
  margin: 0;
  block-size: 100svh;
  inline-size: 100%;
  font-family: var(--primary-font);
  color: var(--primary-color);
}
#root {
  inline-size: 100%;
  block-size: 100svh;
}
ul{
  list-style: none;
  padding: 0;
}
button{
  color: var(--primary-color);
  background-color: transparent;
  border: none;
  cursor: pointer;
  font-family: var(--primary-font);
  transition: .3s all ease-in-out;
  outline: none;
}
.game {
  display: flex;
  inline-size: 100%;
  block-size: 100%;
  position: relative;
  align-items: center;
}
.game-board {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: .5rem;
}
.game-board .list {
  inline-size: 21rem;
  block-size: 21rem;
  display: flex;
  flex-wrap: wrap;
  position: relative;
}
.game-board .square {
  font-weight: bold;
  inline-size: 5rem;
  block-size: 5rem;
  padding: 0;
  font-size: 5rem;
  margin: 1rem;
  font-family: "Montserrat", sans-serif;
  font-weight: 800;
  display: flex;
  align-items: center;
  justify-content: center;
}
.game-board .square span{
  opacity: 0;
  transition: all ease-in-out .5s;
  animation: animate-square .5s ease-in-out forwards;
}
@keyframes animate-square {
  0%{
    opacity: 0;
  }
  100%{
    opacity: 1;
  }
}
.game-board .dashed {
  position: absolute;
  z-index: -1;
  inline-size: 100%;
  block-size: 100%;
  overflow: hidden;
}
svg.line {
  position: absolute;
  z-index: -1;
  block-size: 100%;
}
svg.line:nth-of-type(1) {
  inset-inline-start: 33%;
  inset-block-start: 0;
}
svg.line:nth-of-type(2){
  inset-inline-start: 66.66%;
  inset-block-start: 0;
}
svg.line:nth-of-type(3){
  inset-inline-start: 0;
  inset-block-start: 33%;
  rotate: 0 0 1 90deg;
}
svg.line:nth-of-type(4){
  inset-inline-start: 0;
  inset-block-start: 66.66%;
  rotate: 0 0 1 90deg;
}
.game-info {
  padding: 2rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.game-info .options {
  display: flex;
  justify-content: space-between;
  flex-direction: row-reverse;
  gap: 5rem;
}
.game-info .options button {
  border: none;
  padding: .5rem;
  border-radius: .25rem;
}
.game-info .options button img {
  inline-size: 1.5rem;
  transition: all ease-in-out .3s;
}
.game-info .options button img.asc {
  rotate: 0 0 1 180deg;
}
.game-info .options button:hover img {
  rotate: 0 0 1 360deg;
}
.game-info ul{
  display: flex;
  flex-direction: column;
}
.game-info ul button{
  border-bottom: .1rem solid var(--grey);
  padding: .5rem;
  transition: all ease-in-out .3s;
}
.game-info .description {
  display: flex;
  align-items: center;
}
.game-info .description .move {
  color: var(--grey);
  margin-inline-end: 1rem;
  font-family: var(--secondary-font);
  inline-size: 2rem;
  font-weight: 900;
  font-size: 1.2rem;
}
.game-info .description .player {
  margin-inline-end: 8rem;
  font-weight: 900;
  font-size: 1.4rem;
}
.game-info .description .square{
  font-weight: 100;
  font-size: 0.9rem;
}
.game-info .description .square strong{
  font-weight: 500;
}
.game-info button:hover, 
.game-info button:active, 
.square.win, 
.game-info .options button
{
  background: var(--primary-color);
  color: var(--black);
}
.game-info button.current{
  background: #060606;
  color: var(--primary-color);
}
.status {
  margin-block-start: 2rem;
  font-size: 1.5rem;
  color: var(--primary-color);
}
.results {
  display: flex;
  gap: 3rem;
}
.results .result {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 1.5rem;
  gap: .5rem;
}
.results .result .value{
  font-weight: 900;
  font-family: var(--secondary-font);
}
.confetti{
  inline-size: 100%;
}
.settings{
  position: fixed;
  inset-block-end: 2rem;
  inset-inline-end: 2rem;
  inline-size: 2.5rem;
  block-size: 2.5rem;
}
.settings-icon {
  inline-size: 100%;
  block-size: 100%;
  display: block;
  cursor: pointer;
}
.settings-icon svg{
  transition: all ease-in-out .5s;
}
.settings-icon:hover svg{
  rotate: 0 0 1 360deg;
}
.settings-icon .inner{
  fill: var(--grey);
}
.settings-icon .outer{
  fill: var(--primary-color);
}
.modal {
  background-color: var(--black);
  border: none;
  position: absolute;
  inset-block-start: 50%;
  inset-inline-start: 50%;
  transform: translate(-50%, -50%);
  inline-size: 400px;
  box-shadow: 0 0 2rem 0rem #dcb28812;
  padding: 2rem;
  border-radius: 1rem;
  outline: none;
}
.modal .modal-title{
  font-size: 1.5rem;
  display: flex;
  justify-content: space-between;
}
.modal .modal-title .close{
  inline-size: 1.5rem;
  display: block;
  cursor: pointer;
}
.modal .modal-title .close svg{
  fill: var(--primary-color);
  inline-size: 100%;
  block-size: 100%;
}
.modal-description {
  padding-block: 1rem;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}
.modal .modal-group {
  background: #060606;
  border: 1px solid #0e0e0e;
  border-radius: .5rem;
  padding: 1rem;
}
.modal .modal-option{
    display: flex;
    justify-content: space-between;
    align-items: center;
}
.modal .modal-option .Mui-checked{
  color: var(--primary-color);
}
.css-1yjjitx-MuiSwitch-track {
  background-color: #474646;
}
.modal .modal-option .Mui-checked +.MuiSwitch-track{
  background-color: var(--primary-color);
}
.modal .modal-option .MuiSlider-root {
  color: var(--primary-color);
}

@media (max-width: 800px) {
  #root {
    block-size: auto;
  }
  body {
    block-size: auto;
  }
  .game {
    flex-direction: column;
  }
  .game-board {
    justify-content: center;
    margin-block: 2rem;
  }
  .modal {
    inline-size: 75%;
  }
} 

@media (max-width: 500px) {
  .game-board .list {
    inline-size: 84vw;
    block-size: 84vw;
  }
  .game-board .list .square {
    inline-size: calc(28vw - 2rem);
    block-size: calc(28vw - 2rem);
}
} 